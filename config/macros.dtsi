m_CHR_EU: m_CHR_EU{
    compatible = "zmk,behavior-macro";
    label = "m_CHR_EU";
    wait-ms = <20>;
    tap-ms = <30>;
    #binding-cells = <0>;
    bindings
        = <&macro_press   &kp LALT>
        , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N2 &kp KP_N8>
        , <&macro_release &kp LALT>
        ;
};


/*  MACRO: select word
    :: Ctrl+LEFT, Ctrl+Shift+RIGHT

    WIP...
        [x] using functions inside one string &macro_tap NOT working; e.g. using LC(LEFT)
                <&macro_tap &kp LC(LEFT) &kp LC(LS(RIGHT))>
        [x] more simple didn't work - is it the FUNC uses?
                <&kp LC(LEFT)>, <&kp LC(LS(RIGHT))>
        [v] basic a, then b, then c as separate an no mods WORKED fine

    TIMINGS...
        wait = bef. start
        tap  = between keystrokes (I think)
        default = 100
        20-30 seems much tidier; caution if too close on the tap-ms can cause issues

*/

m_SEL_WRD: m_SEL_WRD{
    compatible = "zmk,behavior-macro";
    label = "m_SEL_WRD";
    wait-ms = <20>;
    tap-ms = <10>;
    #binding-cells = <0>;
    bindings = <&macro_press &kp LCTRL>, <&kp LEFT>, <&macro_press &kp LSHFT>, <&kp RIGHT>, <&macro_release &kp LSHFT>, <&macro_release &kp LCTRL>;
};

/* try ZMK macro helper shortcut -- NOT WORKING with nested FN() calls */
ZMK_MACRO(m_TEST2
    wait-ms = <30>;
    tap-ms = <20>;
    bindings = <&kp A>, <&kp B>;
);





/* examples below â†“ */

macro_quotes: macro_quotes{
    compatible = "zmk,behavior-macro";
    label = "macro_quotes";
    #binding-cells = <0>;
    bindings = <&kp SQT>, <&kp SQT>, <&kp LEFT>;
};
macro_dquotes: macro_dquotes{
    compatible = "zmk,behavior-macro";
    label = "macro_dquotes";
    #binding-cells = <0>;
    bindings = <&kp DQT>, <&kp DQT>, <&kp LEFT>;
};
macro_braces: macro_braces{
    compatible = "zmk,behavior-macro";
    label = "macro_braces";
    #binding-cells = <0>;
    bindings = <&kp LBRC>, <&kp RBRC>, <&kp LEFT>;
};
macro_parens: macro_parens{
    compatible = "zmk,behavior-macro";
    label = "macro_parens";
    #binding-cells = <0>;
    bindings = <&kp LPAR>, <&kp RPAR>, <&kp LEFT>;
};
macro_brackets: macro_brackets{
    compatible = "zmk,behavior-macro";
    label = "macro_brackets";
    #binding-cells = <0>;
    bindings = <&kp LBKT>, <&kp RBKT>, <&kp LEFT>;
};
macro_kinesis: macro_kinesis{
    compatible = "zmk,behavior-macro";
    label = "macro_kinesis";
    #binding-cells = <0>;
    bindings = <&kp LS(K)>, <&kp I>, <&kp N>, <&kp E>, <&kp S>, <&kp I>, <&kp S>;
};